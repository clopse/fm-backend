"""create utility_bills table

Revision ID: dec5ae65e6f6
Revises: 
Create Date: 2025-05-19 18:53:08.766954

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dec5ae65e6f6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('utility_bills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gas_supplierInfo_name', sa.String(), nullable=True),
    sa.Column('gas_supplierInfo_vatRegNo', sa.String(), nullable=True),
    sa.Column('gas_supplierInfo_phoneNumber', sa.String(), nullable=True),
    sa.Column('gas_supplierInfo_email', sa.String(), nullable=True),
    sa.Column('gas_supplierInfo_address_street', sa.String(), nullable=True),
    sa.Column('gas_supplierInfo_address_city', sa.String(), nullable=True),
    sa.Column('gas_supplierInfo_address_postalCode', sa.String(), nullable=True),
    sa.Column('gas_customerInfo_name', sa.String(), nullable=True),
    sa.Column('gas_customerInfo_address_street', sa.String(), nullable=True),
    sa.Column('gas_customerInfo_address_city', sa.String(), nullable=True),
    sa.Column('gas_customerInfo_address_postalCode', sa.String(), nullable=True),
    sa.Column('gas_customerInfo_contactNumber', sa.String(), nullable=True),
    sa.Column('gas_accountInfo_accountNumber', sa.String(), nullable=True),
    sa.Column('gas_accountInfo_gprn', sa.String(), nullable=True),
    sa.Column('gas_accountInfo_meterNumber', sa.String(), nullable=True),
    sa.Column('gas_accountInfo_tariffCategory', sa.String(), nullable=True),
    sa.Column('gas_accountInfo_paymentMethod', sa.String(), nullable=True),
    sa.Column('gas_billSummary_invoiceNumber', sa.String(), nullable=True),
    sa.Column('gas_billSummary_issueDate', sa.Date(), nullable=True),
    sa.Column('gas_billSummary_dueDate', sa.Date(), nullable=True),
    sa.Column('gas_billSummary_billingPeriodStartDate', sa.Date(), nullable=True),
    sa.Column('gas_billSummary_billingPeriodEndDate', sa.Date(), nullable=True),
    sa.Column('gas_billSummary_lastBillAmount', sa.Float(), nullable=True),
    sa.Column('gas_billSummary_paymentReceivedAmount', sa.Float(), nullable=True),
    sa.Column('gas_billSummary_balanceBroughtForward', sa.Float(), nullable=True),
    sa.Column('gas_billSummary_netBillAmount', sa.Float(), nullable=True),
    sa.Column('gas_billSummary_totalVatAmount', sa.Float(), nullable=True),
    sa.Column('gas_billSummary_currentBillAmount', sa.Float(), nullable=True),
    sa.Column('gas_billSummary_totalDueAmount', sa.Float(), nullable=True),
    sa.Column('gas_meterReadings_previousReading', sa.String(), nullable=True),
    sa.Column('gas_meterReadings_presentReading', sa.String(), nullable=True),
    sa.Column('gas_meterReadings_unitsConsumed', sa.Integer(), nullable=True),
    sa.Column('gas_consumptionDetails_consumptionValue', sa.Integer(), nullable=True),
    sa.Column('gas_consumptionDetails_consumptionUnit', sa.String(), nullable=True),
    sa.Column('gas_consumptionDetails_calibrationValue', sa.Float(), nullable=True),
    sa.Column('gas_consumptionDetails_conversionFactor', sa.Float(), nullable=True),
    sa.Column('gas_consumptionDetails_correctionFactor', sa.Float(), nullable=True),
    sa.Column('electricity_supplier', sa.String(), nullable=True),
    sa.Column('electricity_customerRef', sa.String(), nullable=True),
    sa.Column('electricity_billingRef', sa.String(), nullable=True),
    sa.Column('electricity_customer_name', sa.String(), nullable=True),
    sa.Column('electricity_customer_address_street', sa.String(), nullable=True),
    sa.Column('electricity_customer_address_city', sa.String(), nullable=True),
    sa.Column('electricity_customer_address_postalCode', sa.String(), nullable=True),
    sa.Column('electricity_meterDetails_mprn', sa.String(), nullable=True),
    sa.Column('electricity_meterDetails_meterNumber', sa.String(), nullable=True),
    sa.Column('electricity_meterDetails_meterType', sa.String(), nullable=True),
    sa.Column('electricity_meterDetails_mic_value', sa.Float(), nullable=True),
    sa.Column('electricity_meterDetails_mic_unit', sa.String(), nullable=True),
    sa.Column('electricity_meterDetails_maxDemand_value', sa.Float(), nullable=True),
    sa.Column('electricity_meterDetails_maxDemand_unit', sa.String(), nullable=True),
    sa.Column('electricity_meterDetails_maxDemandDate', sa.Date(), nullable=True),
    sa.Column('electricity_consumption_day_kwh', sa.Integer(), nullable=True),
    sa.Column('electricity_consumption_night_kwh', sa.Integer(), nullable=True),
    sa.Column('electricity_consumption_wattless_kwh', sa.Integer(), nullable=True),
    sa.Column('electricity_charge_StandingCharge', sa.Float(), nullable=True),
    sa.Column('electricity_charge_DayUnits', sa.Float(), nullable=True),
    sa.Column('electricity_charge_NightUnits', sa.Float(), nullable=True),
    sa.Column('electricity_charge_LowPowerFactor', sa.Float(), nullable=True),
    sa.Column('electricity_charge_CapacityCharge', sa.Float(), nullable=True),
    sa.Column('electricity_charge_MICExcessCharge', sa.Float(), nullable=True),
    sa.Column('electricity_charge_WinterDemandCharge', sa.Float(), nullable=True),
    sa.Column('electricity_charge_PSOLevy', sa.Float(), nullable=True),
    sa.Column('electricity_charge_ElectricityTax', sa.Float(), nullable=True),
    sa.Column('electricity_taxDetails_vatRate', sa.Float(), nullable=True),
    sa.Column('electricity_taxDetails_vatAmount', sa.Float(), nullable=True),
    sa.Column('electricity_taxDetails_electricityTax_amount', sa.Float(), nullable=True),
    sa.Column('electricity_totalAmount_value', sa.Float(), nullable=True),
    sa.Column('electricity_supplierContact_address', sa.String(), nullable=True),
    sa.Column('electricity_supplierContact_phone_1', sa.String(), nullable=True),
    sa.Column('electricity_supplierContact_phone_2', sa.String(), nullable=True),
    sa.Column('electricity_supplierContact_email', sa.String(), nullable=True),
    sa.Column('electricity_supplierContact_website', sa.String(), nullable=True),
    sa.Column('electricity_supplierContact_vatNumber', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utility_bills_id'), 'utility_bills', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_utility_bills_id'), table_name='utility_bills')
    op.drop_table('utility_bills')
    # ### end Alembic commands ###
